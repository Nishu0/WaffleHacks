<!-- index2.ejs -->
<html>
<head>
    <title>WaffleHacks</title>
    <link rel="apple-touch-icon" sizes="180x180" href="asset/img/favi/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="asset/img/favi/favicon-32x32.png"> 
    <link rel="icon" type="image/png" sizes="16x16" href="asset/img/favi/favicon-16x16.png">
    <link href="./style.css" rel="stylesheet">   
    
    <!-- include astica javascript api version 2023-04-10 -->
    <script src="https://astica.ai/javascript-sdk/2023-04-10/astica.api.js"></script>
</head>
<body>
    <hr style="margin-top:15px;">       
    <input type="hidden" id="astica_ML_apikey" value="<%= process.env.API_KEY %>">
    
    <label for="astica_ML_apikey"></label>
    <select id="astica_ML_version">
        <option value="1.0_full" <% if (process.env.MODEL_VERSION === '1.0_full') { %>selected<% } %>>1.0_full</option>
        <option value="2.0_full" <% if (process.env.MODEL_VERSION === '2.0_full') { %>selected<% } %>>2.0_full</option>
    </select>

    <input type="hidden" id="astica_ML_options" value="<%= process.env.DESCRIBE_PARAMETERS %>">
    <small style="display:block; margin-top:5px;">Comma separated, leave blank for all</small>

    <label for="astica_ML_apikey"><b>Enter Image URL</b></label><br>
    <input type="text" id="astica_ML_analyze_input" placeholder="https://" value="https://astica.ai/example/asticaVision_sample.jpg">
    <label for="astica_ML_file_input"><b>OR Select Local Image File</b> <small>(Slower, requires upload)</small></label>
    <input type="file" id="astica_ML_file_input" accept="image/*">
    <hr>
    <button id="astica_demoSubmit" onclick="asticaVision_describeExample();">Describe Image</button>

    <img src="https://www.astica.org/img/icon.png" id="astica_ML_vision_input" style="display: none; width:300px;  margin:40px 0px;"></textarea>

    <h2 id="astica_ML_vision_output_title" style="display:none;">Output:</h2>
    <pre id="astica_ML_vision_output" style="display:none;"></pre>

    <script>
        function asticaVision_describeExample() {
            if(document.getElementById("astica_ML_apikey").value == '') { 
                alert("Please provide your astica.org API key");
                return;
            }               
            asticaAPI_start(document.getElementById("astica_ML_apikey").value); //only needs to be called once.               
            document.getElementById("astica_ML_vision_output").innerHTML = '';   

            var vision_image_display = document.getElementById("astica_ML_analyze_input").value;
            document.getElementById("astica_ML_vision_input").src = vision_image_display;                           

            var astica_ML_options = document.getElementById("astica_ML_options").value; 
            if(astica_ML_options == '') { astica_ML_options = 'all'; }
            console.log(astica_ML_options);
            asticaVision(
                document.getElementById("astica_ML_version").value,
                document.getElementById("astica_ML_analyze_input").value,
                astica_ML_options,
                your_astica_CallBack,
            );
            document.getElementById("astica_demoSubmit").disabled = true;
            setTimeout(function() {
                document.getElementById("astica_demoSubmit").disabled = false;
            }, 1500);  
        }  
        function your_astica_CallBack(data) {             
            document.getElementById("astica_ML_vision_output_title").style.display = 'block';
            document.getElementById("astica_ML_vision_output").style.display = 'block';
            document.getElementById("astica_ML_vision_input").style.display = 'block';
            document.getElementById("astica_ML_vision_output").textContent = JSON.stringify(data, null, 2);
            document.getElementById("astica_ML_vision_output").scrollIntoView({ behavior: "smooth", block: "start", inline: "nearest" });
            console.log(data); //view all data
        }

        document.getElementById("astica_ML_file_input").addEventListener("change", async function() {
            const file = this.files[0];
            if (file) {
                // Create a FormData object to send the file to the server
                const formData = new FormData();
                formData.append("image", file);
                
                try {
                    // Make a POST request to the server to upload the file
                    const response = await fetch("/upload", {
                        method: "POST",
                        body: formData
                    });

                    const data = await response.json();
                    
                    // Set the Cloudinary URL as the input value
                    document.getElementById("astica_ML_analyze_input").value = data.imageUrl;
                    asticaVision_describeExample();
                } catch (error) {
                    console.error("Error:", error);
                }
            }
        });
    </script> 

    <!--- Demo assets; non-API related --->
    <link href="https://fonts.googleapis.com/css?family=Quicksand:400,500,600,700&display=swap" rel="stylesheet">      
</body>
</html>