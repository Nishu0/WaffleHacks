<!DOCTYPE html>
<html>
<head>
  <title>Image Description</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }

    h1 {
      text-align: center;
    }

    form {
      margin-bottom: 20px;
    }

    .input-container {
      display: flex;
      margin-bottom: 10px;
    }

    .input-container input[type="text"],
    .input-container input[type="file"] {
      flex: 1;
      padding: 5px;
    }

    .input-container input[type="submit"],
    .input-container button {
      margin-left: 10px;
      padding: 5px 10px;
    }

    #captionResult {
      margin-top: 20px;
    }

    #previewVideo {
      display: none;
      border: 1px solid #ccc;
      margin-top: 20px;
    }

    #captureBtn,
    #saveBtn {
      display: none;
      margin-top: 10px;
      padding: 5px 10px;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    // Little base64 helper for local files:
    function convertFileToBase64(file) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = (error) => reject(error);
      });
    }

    document.getElementById("imageUpload").addEventListener("change", async function() {
      const file = this.files[0];
      if (file) {
        const base64Image = await convertFileToBase64(file);
        document.getElementById("imageUrl").value = base64Image;
        document.getElementById("imageUpload").value = '';
        document.getElementById("describeForm").submit();
      }
    });
  </script>
</head>
<body>
  <h1>Image Description</h1>

  <form id="describeForm">
    <div class="input-container">
      <input type="text" id="imageUrl" placeholder="Enter image URL">
      <input type="submit" value="Describe">
    </div>
  </form>

  <div id="captionResult"></div>

  <div class="input-container">
    <button id="useCameraBtn">Use Camera</button>
    <input type="file" id="imageUpload" accept="image/*">
  </div>

  <video id="previewVideo" autoplay></video>

  <div class="input-container">
    <button id="captureBtn">Capture Image</button>
    <button id="saveBtn">Save Image</button>
  </div>

  <script>
    var videoElement = document.getElementById('previewVideo');
    var previewCanvas = document.createElement('canvas');
    var captureBtn = document.getElementById('captureBtn');
    var saveBtn = document.getElementById('saveBtn');
    var imageUrlInput = document.getElementById('imageUrl');
    var mediaStream;

    document.getElementById('describeForm').addEventListener('submit', function(event) {
      event.preventDefault();
      var imageUrl = imageUrlInput.value;

      axios.post('/describe', { imageUrl: imageUrl })
        .then(function(response) {
          console.log(response.data);
          var caption = response.data.caption_GPTS;
          var captionResult = document.getElementById('captionResult');
          captionResult.innerHTML = '<h2>Caption:</h2>' +
            '<p>' + caption + '</p>';
        })
        .catch(function(error) {
          console.log(error);
        });
    });

    document.getElementById('useCameraBtn').addEventListener('click', function() {
      var constraints = { video: { width: { ideal: 4096 }, height: { ideal: 2160 } } };

      navigator.mediaDevices.getUserMedia(constraints)
        .then(function(stream) {
          mediaStream = stream;
          videoElement.srcObject = stream;
          videoElement.style.display = 'block';

          videoElement.addEventListener('loadedmetadata', function() {
            previewCanvas.width = videoElement.videoWidth;
            previewCanvas.height = videoElement.videoHeight;
            captureBtn.style.display = 'inline-block';
          });
        })
        .catch(function(error) {
          console.log(error);
        });
    });

    captureBtn.addEventListener('click', function() {
      var context = previewCanvas.getContext('2d');
      context.drawImage(videoElement, 0, 0, previewCanvas.width, previewCanvas.height);
      captureBtn.style.display = 'none';
      saveBtn.style.display = 'inline-block';
    });

    saveBtn.addEventListener('click', function() {
      var imageURI = previewCanvas.toDataURL('image/png');
      var imageData = imageURI.replace(/^data:image\/(png|jpeg|jpg);base64,/, '');
      imageUrlInput.value = imageData;
      document.getElementById('describeForm').submit();
    });

    window.addEventListener('beforeunload', function() {
      if (mediaStream) {
        mediaStream.getTracks().forEach(function(track) {
          track.stop();
        });
      }
    });
  </script>
</body>
</html>
